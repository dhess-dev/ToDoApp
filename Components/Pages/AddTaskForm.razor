@page "/add-task-form"
@using ToDoApp.Components.Models




<MudGrid Justify="Justify.Center">
    <MudItem xs="12" sm="8" md="6" lg="4">
        <!-- Title -->
        <MudText Typo="Typo.h4" GutterBottom="true" Class="text-center">
            üìù To-Do List
        </MudText>

        <!-- Task List -->
        <MudPaper Width="100%" Elevation="3" Class="p-4 rounded">
            <MudList T="string">
                @foreach (var task in _tasks)
                {
                    <MudListItem Icon="@Icons.Material.Filled.Bookmark">
                        @task.Title
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="() => DeleteTask(task)"/>
                    </MudListItem>
                }
            </MudList>
        </MudPaper>

        <!-- Add New Task -->
        <MudPaper Class="rounded p-4 mt-4" Elevation="4">
            <MudText Typo="Typo.h6" Class="text-center">‚ûï Add New Task</MudText>
            <MudTextField @bind-Value="_newTask.Title" Label="Task Title" Variant="Variant.Outlined" Required="true"
                          Class="w-100"/>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="AddTask" Class="mt-3 w-100">
                Add Task
            </MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    TaskItem _newTask = new();

    readonly List<TaskItem> _tasks =
    [
        new TaskItem { Title = "Task 1", Description = "Description 1", DueDate = DateTime.Now.AddDays(1) },
        new TaskItem { Title = "Task 2", Description = "Description 2", DueDate = DateTime.Now.AddDays(2) },
        new TaskItem { Title = "Task 3", Description = "Description 3", DueDate = DateTime.Now.AddDays(3) }
    ];

    private Task AddTask(MouseEventArgs arg)
    {
        _tasks.Add(_newTask);
        _newTask = new TaskItem();
        return Task.CompletedTask;
    }

    private Task DeleteTask(TaskItem task)
    {
        _tasks.Remove(task);
        return Task.CompletedTask;
    }

}